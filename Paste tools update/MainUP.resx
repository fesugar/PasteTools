<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAEACACoCAAANgAAABAQAAABAAgAaAUAAN4IAAAQEBAAAQAEACgBAABGDgAAKAAAACAA
        AABAAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD49KQA5LQ8AOCkPADYmDAA6OCAAOzE
        TAD02EwA9NRAAPjULADsxCwA5LQsANSYJADgzGQA8MgYAOy8FADkrBwA0IwkAPjobAD09JQA9NxcANyk
        DADozFgA+Pi0APj0hAD4+MQA+Ox4AMSMGAD4+NAA1KQcAMiACADIhCAAyIAUAMiwUADsxDwAvIAEANSU
        GADg2HAAvIAQALx0BADouCAAuJQ0ALiIKACsdBgAmGAQAJhcBACwcAAA0IwMALD4+ACk+PgAlPD4AITw
        +ABg6PgAJLD4AASc9AB48PgAQOD4ADTc+ADUpCwA8MggAODETABU5PgAGKz4AKx8IADUmAwAqGgQAEjY
        +ADksAwApGQEACTM+ABc2PgAILz4AACc5ACQUAAABIzcAIREBACIgDgAdOT4AEDI+AAUvPgAEKD4AAys
        +AAwuPgACITQAEzM+AAMdMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVV
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECAgIDAxssVE5VAAAAAAAAAAAAAAAAAAAAAAAABSEMOhAoKBAb
        LE5SUk5VAAAAAAAAAAAAAAAAAAAAGTodECgoKA8QJEFUUFA2Uk5VAAAAAAAAAAAAAAAAAAUkOh0kQEBA
        LyZEVFBRUVFQUk5TAAAAAAAAAAAAAAANJDovHh4eHiZBSVQ+UVFRUVFQUk5TAAAAAAAAAAAADS8MHh4e
        IyMnLklCNVFRUVFRUVFQUk5TAAAAAAAAACUeDB4eDCcnLkRJQkdPT09PT09PT1FQUk5TAAAAAAAAGxEe
        JwwGOicuSU1GRk5FT09PT09PNVBQPk5KAAAAACUeHyMjAgYHETpESUlJS0JHR0dHR0c1SkxBIQAAAAAA
        GxEeHiAHBwcDAh4mJi5JRkdHR0dHRzVKQDoEAAAAABceHx4eHgcHBwciHRVAHi1GRUVFRUVHNUgVKAwX
        AAAADR8gLy8kBxQUFBUVFRUvREZFRUVFRUc+SEBDOgUAAAAhES9AQAsUFBQUCkMPQ0BENzk5OTk5RTU2
        HhUQIQAAACQRJCILBxQSEhISDw8PQEE3Qjk5OTk5NTYeLxAhAAAAGwQIFBQSEhIaGhoIDg4QPzI3PTg4
        ODk+Nh4eECEAAAAvBBQUEhIaGhgYGBQ7DjwqMTM3PTg4OT42Ix46AwAAAAMEFBISGhgYGBgTExQUJSkx
        MjI3NDg5NTYnHjohAAAAIQMIEhoYGBMTAQEBAQElKTAwMDEyMzQ1NiceHQ0AAAAFBCgSGhgSGhQXFxcX
        AQUhKSkpKisqLC0uJy8vAQAAAAAEChISFAgSARcZGRcXEwUlJQ0WAiQmJyMnDB4AAAAAAA0CBxgaARcX
        GRkZGRcXARMYGhIUIiQeHh4RDQAAAAAAAAMiGBMBFxkZHBwcGRcBExgYEhIQHR4eESMAAAAAAAAADRYU
        GBgXGRwcHBwZFwEBGBgSCx0HHh8gIQAAAAAAAAAAAhYYGBcZGRwcGRkXARMYGBISBwcMERsAAAAAAAAA
        AAAAAhYTFxgTARkZFxcBExgaEhQHAhEbAAAAAAAAAAAAAAAAAgYHCQkJEgEBExQHCgoQFREREQAAAAAA
        AAAAAAAAAAAADQYHBwkJBw4ODg8PEAQEEQMAAAAAAAAAAAAAAAAAAAAAAAYCBgcICAkKCwIEDAMAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAgICAwMEAwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA///z///wAf//gAD//gAAf/wA
        AD/4AAAf8AAAD+AAAAfgAAADwAAAB8AAAAeAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AA
        AAPAAAAHwAAAB+AAAA/gAAAP8AAAH/gAAD/8AAB//gAA//+AA///4A////////////8oAAAAEAAAACAA
        AAABAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPLZiQDqw2gA6r5GAOS1RwDktlYA6cR2APHN
        TAD41zcA+dxKAP3cWAD2xx4A7rgTAOGnHgDSmCkA4bVZAP31hgD79JsA/P+/APz/swD8/6AA/fiLAP7n
        agDhtT0AyrZgAP7sdAD8/JUA/P/LAPb3tQDr548A5tp1AOfQYQDcsDoAxYEYANmrSwDtxEkA+uRXAPz/
        ngD8/8YA6+ehALqbPgC6lDQAt40tAK5yEQC2cwcAyowfAPDKpgD76WsA+eRcAOXejAC5nkQAvPr/AKb3
        /wCI8/8ALb/6AAGm9ADEhQsA5d18AJz0/wBY6P8AELX6ALx/AgDbq0UA/uRkAOG2LQCG7v8AUOH/ADTa
        /wAMs/oABJ7tAMF7BQDUlxcA6b08APbMMQDdpg8AsXsYACnP/wDWnCEAzIoNANOTDAD51VEA5rc0ANed
        DQCfYAUAbeD/AB/H/wAHleMAyYQUAMiFCgD31VIA3KswALp/EQCcXgYAjEsEAFXW/wAJkN4AxooRAOnD
        dADLkBsApmMGADXI/wASu/8AB636AAmg9QAtxf4AC4rZAMyOFQC9dwMAoFwCADHD/wAMrPsAC5/2AA2F
        1ADQjxYAsGwGAJlXBAAPgM8A4KArANugFQDbnw8Aw4gLABF7ygASd8YAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALgVAQA5LegAAAAAAAAAPdXZ3d3hj
        NjZ5AAAAAAAicUZGRnJzaG9vaHQAAAAPV2pqa2tsbUREbm9ocAAALT1aB2JjZGRkZWVmZ2hpLldYSFla
        W1xdXlVVRF9gYT5OT1AKUVI4U1RVVURWOAQOSAc/FhlJSktBTExERThNDgo/GRAQP0AqQUJDREVGRyIK
        GRAaJRQ5KDo1Ozw3PT4uBy8wExETMTIzNDU2NzgBACMkJRMmGycYKCkqKywtAAABGRoTGxscHR4fIBch
        IgAAAAEQEBESExQVFgcXGAAAAAAAAQcICQoLDA0ODwAAAAAAAAAAAQIDBAUGAAAAAAD4DwAA4AcAAMAD
        AACAAQAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIABAACAAQAAwAMAAOAHAAD4HwAAKAAAABAA
        AAAgAAAAAQAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgAAA/wAAAIAAAAD///8AwMDAAICA
        gAAAgIAAAP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERETcAAAABERETSHAAABEiETSI
        hwABEyITSIiIcAERIjREiIiHEREzMzSIhxERIyMiNIiHEREzIyI0iIcRESMyIjSIhxESIjIyNIiHERIm
        ESI0REcRAhVhEiERERABFFYSIiISEAARRWEjIjEAAAEREjMREAAAAAERERAAAPgPAADgBwAAwAMAAIAB
        AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAEAAIABAADAAwAA4AcAAPgfAAA=
</value>
  </data>
</root>